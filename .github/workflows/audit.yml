
name: audit
on:
  push:
    branches: [ciandeasyjson]

jobs:
  versions:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.21

  #   - name: Verify dependencies
  #     run: find -name go.mod -execdir go mod verify \;

  linter:
    runs-on: ubuntu-latest
    container: golang
    
    steps:
      - uses: actions/checkout@v3

      - name: Install golint
        run: go install golang.org/x/lint/golint@latest

      - name: Run golint
        run: find -name go.mod -execdir golint ./... \;
  test:
    runs-on: ubuntu-latest
    container: golang

    steps:
      - uses: actions/checkout@v3

      - name: Run tests
        env:
          GOFLAGS: -buildvcs=false
        run: make test

  build:
    needs: [linter]
  
    runs-on: ubuntu-latest
    container: golang

    steps:
      - uses: actions/checkout@v3

      - name: Build
        env:
          GOOS: linux
          GOARCH: amd64
          CGO_ENABLED: 0
        run: make build

  # deploy:
  #   needs: [build]
  #   runs-on: ubuntu-latest

  #   steps:
      # - uses: actions/checkout@v3
      - name: check
        run: ls

      - name: Push build data
        uses: appleboy/scp-action@v0.1.4
        with:
          host: prinesy-poday.ru
          username: ubuntu
          overwrite: true
          key: ${{ secrets.VM_RSA_KEY }}
          source: "build, docker-compose.yml, Dockerfile, Makefile, AuthService/Dockerfile, ProductService/Dockerfile, UserService/Dockerfile"
          target: /home/ubuntu/2023_2_fanaty_elki
      # - name: Push auth
      #   uses: appleboy/scp-action@v0.1.4
      #   with:
      #     host: prinesy-poday.ru
      #     username: ubuntu
      #     overwrite: true
      #     key: ${{ secrets.SECRET_KEY }}
      #     source: "AuthService/Dockerfile"
      #     target: /home/ubuntu/testCI/AuthService
      # - name: Push user
      #   uses: appleboy/scp-action@v0.1.4
      #   with:
      #     host: prinesy-poday.ru
      #     username: ubuntu
      #     overwrite: true
      #     key: ${{ secrets.SECRET_KEY }}
      #     source: "UserService/Dockerfile"
      #     target: /home/ubuntu/testCI/UserService
      # - name: Push product
      #   uses: appleboy/scp-action@v0.1.4
      #   with:
      #     host: prinesy-poday.ru
      #     username: ubuntu
      #     overwrite: true
      #     key: ${{ secrets.SECRET_KEY }}
      #     source: "ProductService/Dockerfile"
      #     target: /home/ubuntu/testCI/ProductService
      - name: Deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: prinesy-poday.ru
          username: ubuntu
          key: ${{ secrets.VM_RSA_KEY }}
          script: cd /home/ubuntu/2023_2_fanaty_elki && sudo make copy && sudo make up
  